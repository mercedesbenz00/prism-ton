extends fun c(self: SomeMessage, ): Int {
    let a: map<Int, Int> = null;
    let b: Int = 10;

    {}
    {
        let c: Int = 20;
        c = 15;
		_ = 20;
    }

    self.description = "Tact is awesome!";
    a.asCell()!!.toString();
    b += 32;

    if (true) {}
    if (false) {}
    else {}

    if (false) {}
    else if (true) {}

    while (false) {}

    repeat (5) {}

    do {}
    until (false);

    try {}
    try {} catch (e) {}

    foreach (k, v in a) {}

    0;
    return 0;
}

----------------------------------------------------

[
	["keyword", "extends"],
	["keyword", "fun"],
	["function", "c"],
	["punctuation", "("],
	["keyword", "self"],
	["punctuation", ":"],
	["class-name", "SomeMessage"],
	["punctuation", ","],
	["punctuation", ")"],
	["punctuation", ":"],
	["builtin", "Int"],
	["punctuation", "{"],

	["keyword", "let"],
	["variable", "a"],
	["punctuation", ":"],
	["generics", [
		["builtin", "map"],
		["punctuation", "<"],
		["builtin", "Int"],
		["punctuation", ","],
		["builtin", "Int"],
		["punctuation", ">"]
	]],
	["operator", "="],
	["constant", "null"],
	["punctuation", ";"],

	["keyword", "let"],
	["variable", "b"],
	["punctuation", ":"],
	["builtin", "Int"],
	["operator", "="],
	["number", "10"],
	["punctuation", ";"],

	["punctuation", "{"],
	["punctuation", "}"],

	["punctuation", "{"],

	["keyword", "let"],
	["variable", "c"],
	["punctuation", ":"],
	["builtin", "Int"],
	["operator", "="],
	["number", "20"],
	["punctuation", ";"],

	["variable", "c"],
	["operator", "="],
	["number", "15"],
	["punctuation", ";"],

	["comment", "_"],
	["operator", "="],
	["number", "20"],
	["punctuation", ";"],

	["punctuation", "}"],

	["keyword", "self"],
	["punctuation", "."],
	["variable", "description"],
	["operator", "="],
	["string-literal", [
		["string", "\"Tact is awesome!\""]
	]],
	["punctuation", ";"],

	["variable", "a"],
	["punctuation", "."],
	["function", "asCell"],
	["punctuation", "("],
	["punctuation", ")"],
	["operator", "!!"],
	["punctuation", "."],
	["function", "toString"],
	["punctuation", "("],
	["punctuation", ")"],
	["punctuation", ";"],

	["variable", "b"],
	["operator", "+="],
	["number", "32"],
	["punctuation", ";"],

	["keyword", "if"],
	["punctuation", "("],
	["boolean", "true"],
	["punctuation", ")"],
	["punctuation", "{"],
	["punctuation", "}"],

	["keyword", "if"],
	["punctuation", "("],
	["boolean", "false"],
	["punctuation", ")"],
	["punctuation", "{"],
	["punctuation", "}"],

	["keyword", "else"],
	["punctuation", "{"],
	["punctuation", "}"],

	["keyword", "if"],
	["punctuation", "("],
	["boolean", "false"],
	["punctuation", ")"],
	["punctuation", "{"],
	["punctuation", "}"],

	["keyword", "else"],
	["keyword", "if"],
	["punctuation", "("],
	["boolean", "true"],
	["punctuation", ")"],
	["punctuation", "{"],
	["punctuation", "}"],

	["keyword", "while"],
	["punctuation", "("],
	["boolean", "false"],
	["punctuation", ")"],
	["punctuation", "{"],
	["punctuation", "}"],

	["keyword", "repeat"],
	["punctuation", "("],
	["number", "5"],
	["punctuation", ")"],
	["punctuation", "{"],
	["punctuation", "}"],

	["keyword", "do"],
	["punctuation", "{"],
	["punctuation", "}"],

	["keyword", "until"],
	["punctuation", "("],
	["boolean", "false"],
	["punctuation", ")"],
	["punctuation", ";"],

	["keyword", "try"],
	["punctuation", "{"],
	["punctuation", "}"],

	["keyword", "try"],
	["punctuation", "{"],
	["punctuation", "}"],
	["keyword", "catch"],
	["punctuation", "("],
	["variable", "e"],
	["punctuation", ")"],
	["punctuation", "{"],
	["punctuation", "}"],

	["keyword", "foreach"],
	["punctuation", "("],
	["variable", "k"],
	["punctuation", ","],
	["variable", "v"],
	["keyword", "in"],
	["variable", "a"],
	["punctuation", ")"],
	["punctuation", "{"],
	["punctuation", "}"],

	["number", "0"], ["punctuation", ";"],
	["keyword", "return"], ["number", "0"], ["punctuation", ";"],
	["punctuation", "}"]
]
