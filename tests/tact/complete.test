import "@stdlib/ownable";

struct SampleStruct {
    message: Int as uint32;
}

@name(store_uint)
native storeUint(s: Builder, value: Int, bits: Int): Builder;

message(0x1234) MyMessage {
    data: SampleStruct;
}

trait MyTrait {
    const CONST_VAL: Int = 42 + true ? 0x1 : 0x2;
    get fun traitState(): Int {
        return 0;
    }
}

@interface("org.ton.something")
contract MyContract with MyTrait, Ownable? {
    owner: Address; // comment
    value: Int as uint32 = 0b101010 + 0o77;
    counters: map<Int, Address> /* Address, "Address" */ ;
    map: map<Int as int16, Int as uint32>;
    b: bounced<MyMessage>;
    c: map<Bool, Cell>;
    a: map<Slice, String>;
    d: StringBuilder;

    init(owner: Address) {
        self.owner = owner;
    }
    bounced() {}
    external() {}
    receive() {}
    virtual fun overrideMe() {}
}

----------------------------------------------------

[
	["keyword", "import"],
	["string-literal", [
		["string", "\"@stdlib/ownable\""]
	]],
	["punctuation", ";"],

	["keyword", "struct"],
	["class-name", "SampleStruct"],
	["punctuation", "{"],

	["variable", "message"],
	["punctuation", ":"],
	["builtin", "Int"],
	["keyword", "as"],
	["keyword", "uint32"],
	["punctuation", ";"],

	["punctuation", "}"],

	["attribute", [
		["function", "@name"]
	]],
	["punctuation", "("],
	["variable", "store_uint"],
	["punctuation", ")"],

	["keyword", "native"],
	["function", "storeUint"],
	["punctuation", "("],
	["variable", "s"],
	["punctuation", ":"],
	["builtin", "Builder"],
	["punctuation", ","],
	["variable", "value"],
	["punctuation", ":"],
	["builtin", "Int"],
	["punctuation", ","],
	["variable", "bits"],
	["punctuation", ":"],
	["builtin", "Int"],
	["punctuation", ")"],
	["punctuation", ":"],
	["builtin", "Builder"],
	["punctuation", ";"],

	["keyword", "message"],
	["punctuation", "("],
	["number", "0x1234"],
	["punctuation", ")"],
	["class-name", "MyMessage"],
	["punctuation", "{"],

	["variable", "data"],
	["punctuation", ":"],
	["class-name", "SampleStruct"],
	["punctuation", ";"],

	["punctuation", "}"],

	["keyword", "trait"],
	["class-name", "MyTrait"],
	["punctuation", "{"],

	["keyword", "const"],
	["constant", "CONST_VAL"],
	["punctuation", ":"],
	["builtin", "Int"],
	["operator", "="],
	["number", "42"],
	["operator", "+"],
	["boolean", "true"],
	["punctuation", "?"],
	["number", "0x1"],
	["punctuation", ":"],
	["number", "0x2"],
	["punctuation", ";"],

	["keyword", "get"],
	["keyword", "fun"],
	["function", "traitState"],
	["punctuation", "("],
	["punctuation", ")"],
	["punctuation", ":"],
	["builtin", "Int"],
	["punctuation", "{"],

	["keyword", "return"],
	["number", "0"],
	["punctuation", ";"],

	["punctuation", "}"],

	["punctuation", "}"],

	["attribute", [
		["function", "@interface"]
	]],
	["punctuation", "("],
	["string-literal", [
		["string", "\"org.ton.something\""]
	]],
	["punctuation", ")"],

	["keyword", "contract"],
	["class-name", "MyContract"],
	["keyword", "with"],
	["class-name", "MyTrait"],
	["punctuation", ","],
	["class-name", "Ownable"],
	["punctuation", "?"],
	["punctuation", "{"],

	["variable", "owner"],
	["punctuation", ":"],
	["builtin", "Address"],
	["punctuation", ";"],
	["comment", "// comment"],

	["variable", "value"],
	["punctuation", ":"],
	["builtin", "Int"],
	["keyword", "as"],
	["keyword", "uint32"],
	["operator", "="],
	["number", "0b101010"],
	["operator", "+"],
	["number", "0o77"],
	["punctuation", ";"],

	["variable", "counters"],
	["punctuation", ":"],
	["generics", [
		["builtin", "map"],
		["punctuation", "<"],
		["builtin", "Int"],
		["punctuation", ","],
		["builtin", "Address"],
		["punctuation", ">"]
	]],
	["comment", "/* Address, \"Address\" */"],
	["punctuation", ";"],

	["variable", "map"],
	["punctuation", ":"],
	["generics", [
		["builtin", "map"],
		["punctuation", "<"],
		["builtin", "Int"],
		["keyword", "as"],
		["keyword", "int16"],
		["punctuation", ","],
		["builtin", "Int"],
		["keyword", "as"],
		["keyword", "uint32"],
		["punctuation", ">"]
	]],
	["punctuation", ";"],

	["variable", "b"],
	["punctuation", ":"],
	["generics", [
		["builtin", "bounced"],
		["punctuation", "<"],
		["class-name", "MyMessage"],
		["punctuation", ">"]
	]],
	["punctuation", ";"],

	["variable", "c"],
	["punctuation", ":"],
	["generics", [
		["builtin", "map"],
		["punctuation", "<"],
		["builtin", "Bool"],
		["punctuation", ","],
		["builtin", "Cell"],
		["punctuation", ">"]
	]],
	["punctuation", ";"],

	["variable", "a"],
	["punctuation", ":"],
	["generics", [
		["builtin", "map"],
		["punctuation", "<"],
		["builtin", "Slice"],
		["punctuation", ","],
		["builtin", "String"],
		["punctuation", ">"]
	]],
	["punctuation", ";"],

	["variable", "d"],
	["punctuation", ":"],
	["builtin", "StringBuilder"],
	["punctuation", ";"],

	["keyword", "init"],
	["punctuation", "("],
	["variable", "owner"],
	["punctuation", ":"],
	["builtin", "Address"],
	["punctuation", ")"],
	["punctuation", "{"],

	["keyword", "self"],
	["punctuation", "."],
	["variable", "owner"],
	["operator", "="],
	["variable", "owner"],
	["punctuation", ";"],

	["punctuation", "}"],

	["keyword", "bounced"],
	["punctuation", "("],
	["punctuation", ")"],
	["punctuation", "{"],
	["punctuation", "}"],

	["keyword", "external"],
	["punctuation", "("],
	["punctuation", ")"],
	["punctuation", "{"],
	["punctuation", "}"],

	["keyword", "receive"],
	["punctuation", "("],
	["punctuation", ")"],
	["punctuation", "{"],
	["punctuation", "}"],

	["keyword", "virtual"],
	["keyword", "fun"],
	["function", "overrideMe"],
	["punctuation", "("],
	["punctuation", ")"],
	["punctuation", "{"],
	["punctuation", "}"],

	["punctuation", "}"]
]

----------------------------------------------------

Complete test of the highlighting
